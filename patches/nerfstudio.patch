diff --git a/nerfstudio/viewer/render_panel.py b/nerfstudio/viewer/render_panel.py
index a6bbba3a..823e1faf 100644
--- a/nerfstudio/viewer/render_panel.py
+++ b/nerfstudio/viewer/render_panel.py
@@ -20,6 +20,7 @@ import datetime
 import json
 import threading
 import time
+import requests
 from pathlib import Path
 from typing import Dict, List, Literal, Optional, Tuple, Union
 
@@ -1020,10 +1021,10 @@ def populate_render_tab(
         hint="Name of the render",
     )
     render_button = server.add_gui_button(
-        "Generate Command",
+        "Render Video",
         color="green",
-        icon=viser.Icon.FILE_EXPORT,
-        hint="Generate the ns-render command for rendering the camera path.",
+        icon=viser.Icon.CAMERA_SHARE,
+        hint="Render the camera path to a video file.",
     )
 
     reset_up_button = server.add_gui_button(
@@ -1134,28 +1135,30 @@ def populate_render_tab(
         json_outfile.parent.mkdir(parents=True, exist_ok=True)
         with open(json_outfile.absolute(), "w") as outfile:
             json.dump(json_data, outfile)
-        # now show the command
-        with event.client.add_gui_modal("Render Command") as modal:
-            dataname = datapath.name
-            command = " ".join(
-                [
-                    "ns-render camera-path",
-                    f"--load-config {config_path}",
-                    f"--camera-path-filename {json_outfile.absolute()}",
-                    f"--output-path renders/{dataname}/{render_name_text.value}.mp4",
-                ]
-            )
-            event.client.add_gui_markdown(
-                "\n".join(
-                    [
-                        "To render the trajectory, run the following from the command line:",
-                        "",
-                        "```",
-                        command,
-                        "```",
-                    ]
+
+        # make http to localhost:3000 to render the camera path
+        body = {
+            "projectPath": f"{datapath.parent.absolute()}",
+            "cameraPath": f"{json_outfile}",
+            "outputPath": f"renders/{render_name_text.value}.mp4",
+            "configPath": f"{config_path}",
+        }
+
+        req = requests.post(
+            "http://localhost:3000/render-camera-path",
+            json=body,
+        )
+
+        with event.client.add_gui_modal("Render") as modal:
+            if req.status_code == 200:
+                event.client.add_gui_markdown(
+                    "The Rendering has started. You can refresh the panel below to see the file."
                 )
-            )
+            else:
+                event.client.add_gui_markdown(
+                    "The Rendering has failed. Please check the server logs for more information."
+                )
+
             close_button = event.client.add_gui_button("Close")
 
             @close_button.on_click
diff --git a/nerfstudio/viewer/viewer.py b/nerfstudio/viewer/viewer.py
index db84e955..2e7faab8 100644
--- a/nerfstudio/viewer/viewer.py
+++ b/nerfstudio/viewer/viewer.py
@@ -152,7 +152,7 @@ class Viewer:
             titlebar_content=titlebar_theme,
             control_layout="collapsible",
             dark_mode=True,
-            brand_color=(255, 211, 105),
+            brand_color=(117, 130, 255),
         )
 
         self.render_statemachines: Dict[int, RenderStateMachine] = {}
